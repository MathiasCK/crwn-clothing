{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/pages/Shop.component.jsx\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionItemComponent from \"../components/Collection-item.component\";\nimport CollectionsOverview from \"../components/Collections-overview.component\";\nimport WithSpinner from \"../components/With-spinner.component\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../Firebase/Firebase.utils\";\nimport { updateCollections } from \"../redux/shop/shop.actions\";\nimport CollectionPage from \"./Collection.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState = {\n        loading: false\n      };\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"CRWN Clothing | Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shop-page\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${match.path}`,\n          render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n            isLoading: loading,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${match.path}/:collectionId`,\n          render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n            isLoading: loading,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/pages/Shop.component.jsx"],"names":["React","Helmet","connect","Route","CollectionItemComponent","CollectionsOverview","WithSpinner","convertCollectionsSnapshotToMap","firestore","updateCollections","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,uBAAP,MAAoC,yCAApC;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,4BAHP;AAIA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACD,mBAAD,CAAjD;KAAMM,6B;AACN,MAAMC,yBAAyB,GAAGN,WAAW,CAACI,cAAD,CAA7C;MAAME,yB;;AAEN,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,GAAgB;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAhB;AACD,KAJD;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAFtB;AAGE,UAAA,MAAM,EAAGT,KAAD,iBACN,QAAC,6BAAD;AAA+B,YAAA,SAAS,EAAEH,OAA1C;AAAA,eAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AACE,UAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB;AAEE,UAAA,MAAM,EAAGT,KAAD,iBACN,QAAC,yBAAD;AAA2B,YAAA,SAAS,EAAEH,OAAtC;AAAA,eAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA1CoC;;AA6CvC,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGe,cAAD,IACjBM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAetB,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionItemComponent from \"../components/Collection-item.component\";\nimport CollectionsOverview from \"../components/Collections-overview.component\";\nimport WithSpinner from \"../components/With-spinner.component\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../Firebase/Firebase.utils\";\nimport { updateCollections } from \"../redux/shop/shop.actions\";\nimport CollectionPage from \"./Collection.component\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState = { loading: false };\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div>\n        <Helmet>\n          <title>CRWN Clothing | Shop</title>\n        </Helmet>\n        <div className=\"shop-page\">\n          <Route\n            exact\n            path={`${match.path}`}\n            render={(props) => (\n              <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n            )}\n          />\n          <Route\n            path={`${match.path}/:collectionId`}\n            render={(props) => (\n              <CollectionPageWithSpinner isLoading={loading} {...props} />\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}