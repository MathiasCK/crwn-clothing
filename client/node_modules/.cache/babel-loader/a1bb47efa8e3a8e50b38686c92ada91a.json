{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/components/Sign-in.components.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { googleSignInStart, emailSignInStart } from \"../redux/user/user.actions\";\nimport CustomButton from \"./Custom-button.component\";\nimport FormInput from \"./Form-input.component\";\n\nconst SignIn = ({\n  emailSignInStart\n}) => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(StyledSignIn, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"sign in with google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"YpkUZKLtdo54ndxMB6tR6WIhkbw=\");\n\n_c = SignIn;\nconst StyledSignIn = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = StyledSignIn;\nconst Title = styled.h2`\n  margin: 10px 0;\n`;\n_c3 = Title;\nconst Button = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c4 = Button;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"StyledSignIn\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Button\");","map":{"version":3,"sources":["/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/components/Sign-in.components.jsx"],"names":["React","useState","connect","styled","googleSignInStart","emailSignInStart","CustomButton","FormInput","SignIn","credentials","setCredentials","email","password","handleSubmit","e","preventDefault","props","state","handleChange","value","name","target","setState","StyledSignIn","div","Title","h2","Button","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../redux/user/user.actions\";\nimport CustomButton from \"./Custom-button.component\";\nimport FormInput from \"./Form-input.component\";\n\nconst SignIn = ({ emailSignInStart }) => {\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { emailSignInStart } = this.props;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  const { googleSignInStart } = this.props;\n  return (\n    <StyledSignIn>\n      <Title>I already have an account</Title>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={this.handleSubmit}>\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          label=\"Password\"\n          required\n        />\n        <Button>\n          <CustomButton type=\"submit\">sign in</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            sign in with google\n          </CustomButton>\n        </Button>\n      </form>\n    </StyledSignIn>\n  );\n};\n\nconst StyledSignIn = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h2`\n  margin: 10px 0;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}