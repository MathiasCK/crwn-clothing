{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/pages/Shop.component.jsx\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../components/Collections-overview.component\";\nimport WithSpinner from \"../components/With-spinner.component\";\nimport { fetchCollectionsStartAsync } from \"../redux/shop/shop.actions\";\nimport CollectionPage from \"./Collection.component\";\nimport { motion } from \"framer-motion\";\nimport { pageAnimation } from \"../animations/animations\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../redux/shop/shop.selectors\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      exit: \"exit\",\n      variants: pageAnimation,\n      initial: \"hidden\",\n      animate: \"show\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"CRWN Clothing | Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shop-page\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${match.path}`,\n          render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n            isLoading: isCollectionFetching,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${match.path}/:collectionId`,\n          render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n            isLoading: isCollectionFetching,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/pages/Shop.component.jsx"],"names":["React","Helmet","connect","Route","CollectionsOverview","WithSpinner","fetchCollectionsStartAsync","CollectionPage","motion","pageAnimation","createStructuredSelector","selectIsCollectionFetching","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","render","match","isCollectionFetching","props","loading","state","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,SAASC,0BAAT,QAA2C,4BAA3C;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA,MAAMC,6BAA6B,GAAGP,WAAW,CAACD,mBAAD,CAAjD;KAAMQ,6B;AACN,MAAMC,yBAAyB,GAAGR,WAAW,CAACE,cAAD,CAA7C;MAAMM,yB;;AAEN,MAAMC,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKC,KAA7C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACE,QAAC,MAAD,CAAQ,GAAR;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEZ,aAFZ;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,OAAO,EAAC,MAJV;AAAA,8BAME,QAAC,MAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAG,GAAEQ,KAAK,CAACK,IAAK,EAFtB;AAGE,UAAA,MAAM,EAAGH,KAAD,iBACN,QAAC,6BAAD;AACE,YAAA,SAAS,EAAED,oBADb;AAAA,eAEMC;AAFN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,KAAD;AACE,UAAA,IAAI,EAAG,GAAEF,KAAK,CAACK,IAAK,gBADtB;AAEE,UAAA,MAAM,EAAGH,KAAD,iBACN,QAAC,yBAAD;AACE,YAAA,SAAS,EAAED,oBADb;AAAA,eAEMC;AAFN;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AArCoC;;AAwCvC,MAAMI,eAAe,GAAGb,wBAAwB,CAAC;AAC/CQ,EAAAA,oBAAoB,EAAEP;AADyB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../components/Collections-overview.component\";\nimport WithSpinner from \"../components/With-spinner.component\";\n\nimport { fetchCollectionsStartAsync } from \"../redux/shop/shop.actions\";\nimport CollectionPage from \"./Collection.component\";\n\nimport { motion } from \"framer-motion\";\nimport { pageAnimation } from \"../animations/animations\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../redux/shop/shop.selectors\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  render() {\n    const { match, isCollectionFetching } = this.props;\n    const { loading } = this.state;\n    return (\n      <motion.div\n        exit=\"exit\"\n        variants={pageAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n      >\n        <Helmet>\n          <title>CRWN Clothing | Shop</title>\n        </Helmet>\n        <div className=\"shop-page\">\n          <Route\n            exact\n            path={`${match.path}`}\n            render={(props) => (\n              <CollectionOverviewWithSpinner\n                isLoading={isCollectionFetching}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={`${match.path}/:collectionId`}\n            render={(props) => (\n              <CollectionPageWithSpinner\n                isLoading={isCollectionFetching}\n                {...props}\n              />\n            )}\n          />\n        </div>\n      </motion.div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}