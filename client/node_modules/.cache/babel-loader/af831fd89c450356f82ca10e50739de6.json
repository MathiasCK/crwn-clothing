{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyB2CqsA_4hgdf4BE3TYVJIjSJ4pYjNSR-c\",\n  authDomain: \"crwn-db-cd2a8.firebaseapp.com\",\n  projectId: \"crwn-db-cd2a8\",\n  storageBucket: \"crwn-db-cd2a8.appspot.com\",\n  messagingSenderId: \"330064213310\",\n  appId: \"1:330064213310:web:49d1e296a60e0b5c60686f\",\n  measurementId: \"G-QFFSTF7G35\"\n};\nexport const createUserProfileDocument = async (userAuth, addidionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firebase.collection(\"user\");\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log({\n    collectionSnapshot\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addidionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n/*\nexport const facebook = new firebase.auth.FacebookAuthProvider();\nfacebook.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithFacebook = () => auth.signInWithPopUpe(facebook);*/\n\nexport default firebase;","map":{"version":3,"sources":["/Users/mathiaskolberg/Documents/React/udemy/crwn-clothing/src/Firebase/Firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","addidionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,SAAS,EAAE,eAHE;AAIbC,EAAAA,aAAa,EAAE,2BAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE,2CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGhB,QAAQ,CAACiB,UAAT,CAAoB,MAApB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;;AAEA,MAAI,CAACF,QAAQ,CAACK,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBf,QAA/B;AACA,UAAMgB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMf,OAAO,CAACgB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGf;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOkB,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACD;AACF;;AACD,SAAOlB,OAAP;AACD,CA3BM;AA6BPZ,QAAQ,CAAC+B,aAAT,CAAuB9B,MAAvB;AAEA,OAAO,MAAM+B,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb;AACP,OAAO,MAAMnB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMoB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP;AACA;AACA;AACA;;AAEA,eAAejC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyB2CqsA_4hgdf4BE3TYVJIjSJ4pYjNSR-c\",\n  authDomain: \"crwn-db-cd2a8.firebaseapp.com\",\n  projectId: \"crwn-db-cd2a8\",\n  storageBucket: \"crwn-db-cd2a8.appspot.com\",\n  messagingSenderId: \"330064213310\",\n  appId: \"1:330064213310:web:49d1e296a60e0b5c60686f\",\n  measurementId: \"G-QFFSTF7G35\",\n};\n\nexport const createUserProfileDocument = async (userAuth, addidionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firebase.collection(\"user\");\n\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n\n  console.log({ collectionSnapshot });\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addidionalData,\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n/*\nexport const facebook = new firebase.auth.FacebookAuthProvider();\nfacebook.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithFacebook = () => auth.signInWithPopUpe(facebook);*/\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}